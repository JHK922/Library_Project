<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.project.library.mapper.MemberMapper">

    <!-- 테이블 전체 컬럼 -->
    <sql id="memberAll">
        id, email, password1, name, birth, address, phone, createAt, deleteYN
    </sql>

    <!-- id는 @Mapper에서 정의한 이름과 동일해야 함 parameterType은 참고 할 자료를 넣음-->

    <!-- 회원정보 저장 -->
    <insert id="saveMember" parameterType="com.project.library.dto.request.MemberRequest"
    useGeneratedKeys="true" keyProperty="id">
        INSERT INTO member (
            id, email, password1, password2, name, birth, address, phone, createAt, deleteYN
        ) VALUES (
            #{id},
            #{email},
            #{password1},
            #{password2},
            #{name},
            #{birth},
            #{address},
            #{phone},
            NOW(),
            false
        );
    </insert>

    <!-- 회원정보 지정 조회 -->
    <select id="findById"  resultType="com.project.library.dto.response.MemberResponse">
        SELECT
            <include refid="memberAll" />
        FROM
            member
        WHERE
            id = #{id}
    </select>

    <!-- 회원정보 지정 조회 -->
    <select id="findByName"  resultType="com.project.library.dto.response.MemberResponse">
        SELECT
            <include refid="memberAll" />
        FROM
            member
        WHERE
            name = #{name}
    </select>

    <!-- 회원정보 전체 조회 -->
    <select id="findAll" resultType="com.project.library.dto.response.MemberResponse">
        SELECT
            <include refid="memberAll" />
        FROM
            member
    </select>

    <!-- 회원정보 수정 -->
    <update id="updateMember" parameterType="com.project.library.dto.request.MemberRequest">
        UPDATE
            member
        SET
            password1 = #{password1},
            name = #{name},
            birth = #{birth},
            address = #{address},
            phone = #{phone}
        WHERE
            id = #{id}
    </update>

    <!-- 회원정보 삭제 -->
    <delete id="deleteById" parameterType="Long">
        UPDATE
            member
        SET
            deleteYN = true
        WHERE
            id = #{id}
    </delete>
</mapper>

