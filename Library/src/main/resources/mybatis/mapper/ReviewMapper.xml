<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.project.library.mapper.ReviewMapper">

    <!-- request Body 요청 데이터를 DB에 저장-->
    <insert id="saveReview" parameterType="com.project.library.dto.request.ReviewRequestDto" useGeneratedKeys="true"
            keyProperty="id">

        insert into review (content, createdAt, deleteStatus, memberId, bookId)
        values ( #{content}
               , now()
               , true
               , #{memberId}
               , #{bookId});

    </insert>

    <update id="updateReview" parameterType="com.project.library.dto.request.ReviewRequestDto">
        update review
        set id         = #{id}
          , content    = #{content}
          , modifiedAt = now()
          , writer     = #{writer}
        where id = #{id}
    </update>

    <select id="findReviewByBookId" parameterType="Long"
            resultType="com.project.library.dto.response.ReviewResponseDto">
        select r.id,
               m.name as writer,
               r.content,
               r.createdAt,
               r.modifiedAt,
               r.deleteStatus,
               r.memberId,
               r.bookId
        from review as r
        inner join member as m
        on m.id = r.memberId
        where r.bookId = #{bookId}
    </select>

    <select id="findReviewsByMemberId" parameterType="Long" resultType="com.project.library.dto.response.ReviewResponseDto">
        select r.id, b.title, r.createdAt
        from review as r
                 inner join book as b
                            on r.bookId = b.id
                 inner join member as m
                            on r.memberId = m.id
        where m.id = #{memberId};
    </select>

    <update id="deleteReview" parameterType="Long">
        update review
        set deleteStatus = false
        where id = #{id}
    </update>

</mapper>